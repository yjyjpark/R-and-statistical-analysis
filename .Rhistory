?bookdown::gitbook
iris.url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
read_csv(iris.url,
col_names=c("S.length","S.width","P.length","P.width","Species"))
library(tidyverse)
iris.url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
read_csv(iris.url,
col_names=c("S.length","S.width","P.length","P.width","Species"))
iris.url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
read_csv(iris.url,
col_names=c("S.length","S.width","P.length","P.width","Species"))
knitr::include_graphics("Figure/ch1_RStudio_first.png")
z <- scan("Data/data1.txt")
library(xlsx)
read.xlsx("Data/data5.xlsx", sheetIndex = 1)
z <- scan("Data/data1.txt")
z <- scan("Data/data1.txt")
z
knitr::include_graphics("Figure/ex_result.png")
library(tidyverse)
# Chapter 4 dplyr 1.0.0
#
# https://dplyr.tidyverse.org/dev/articles/index.html
library(tidyverse)
?count
by_cyl <- mpg %>%
group_by(cyl) %>%
print(n = 3)
by_cyl_drv <- mpg %>%
group_by(cyl, drv) %>%
print(n = 3)
by_cyl %>% tally()
mpg %>% tally()
by_cyl %>% count()
mpg %>% count(cyl)
iris.url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
read_csv(iris.url,
col_names=c("S.length","S.width","P.length","P.width","Species"))
warnings()
knitr::include_graphics("Figure/ch1_RStudio_first.PNG")
?kableExtra::kable_styling
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
paste0('차분: ', expression(x[i+n] - x[i]), ', 시차 n의 디폴트 값은 1'),
'최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
col2
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
paste0('차분: ', expression(x[i+n] - x[i])),
'최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
expression(paste0('차분: ', x[i+n] - x[i])),
'최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
expression(paste('차분: ', x[i+n] - x[i])),
'최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
expression(paste("차분: ", ~x[i+n]-x[i])),
'최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
paste("차분: ", expression(x[i+n]-x[i])),
'최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
col2
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
expression(paste("차분: ", x[i+n]-x[i])),
'최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
expression(paste("차분: ", x[i+n]-x[i]))
expression(paste("차분: ", x[i+n]-x[i])) %>% eval()
expression(paste("차분: ", x[i+n]-x[i])) %>% unquote()
expression(paste("차분: ", x[i+n]-x[i])) %>% quo()
expression(paste("차분: ", x[i+n]-x[i])) %>% enquo()
expression(paste("차분: ", x[i+n]-x[i])) %>% expr()
?expr
expression(paste("차분: ", x[i+n]-x[i])) %>% exprs()
expression(paste("차분: ", x[i+n]-x[i])) %>% expr()
expression(x[i+n]-x[i]) %>% expr()
expression(x[i+n]-x[i])
expression(x[i+n]-x[i]) %>% cat()
expression(x[i+n]-x[i]) %>% message()
read_csv("Data/data3_2.txt",
col_names = FALSE,
col_types = "dcd",
comment = "#",
na = c(".", "NA"))
read_csv("Data/data3_2.txt",
col_names = FALSE,
comment = "#",
na = c(".", "NA"))
iris.url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
read_csv(iris.url,
col_names=c("S.length","S.width","P.length","P.width","Species"))
# 8) cur_data(): return current group data, excluding grouping variables
mpg %>%
group_by(cyl) %>%
filter(n() > 5) %>%
summarise(r2 = summary(lm(hwy ~ displ,
data = cur_data()))$r.squared)
# without cur_data(), we got the same result. What happens???
mpg %>%
group_by(cyl) %>%
filter(n() > 5) %>%
summarise(r2 = summary(lm(hwy ~ displ))$r.squared)
# about cur_data()
df <- tibble(
grp = rep(1:2, each = 5),
x = c(rnorm(5, -0.25, 1), rnorm(5, 0, 1.5)),
y = c(rnorm(5, 0.25, 1), rnorm(5, 0, 0.5)),
)
df %>%
group_by(grp) %>%
summarize(Totals = list(cur_data()))
?cur_data
?ggplot2::facet_wrap
### facets
ggplot(data=mpg) +
geom_point(mapping=aes(x=displ,y=hwy)) +
facet_wrap(vars(class))
library(tidyverse)
### facets
ggplot(data=mpg) +
geom_point(mapping=aes(x=displ,y=hwy)) +
facet_wrap(vars(class))
pp + facet_wrap(vars(class), ncol=2)
mpg %>% filter(class != "2seater") %>%
ggplot() +
geom_point(mapping=aes(x=displ,y=hwy)) +
facet_wrap(vars(class))
mpg %>%
filter(class != "2seater") %>%
ggplot() +
geom_point(mapping=aes(x=displ,y=hwy)) +
facet_wrap(vars(class))
pp <- mpg %>%
filter(class != "2seater") %>%
ggplot() +
geom_point(aes(x=displ, y=hwy))
pp + facet_wrap(vars(class), ncol=2)
pp + facet_wrap(vars(class), ncol=2, dir="v")
my_plot <- mpg %>%
filter(cyl != 5, drv != "r") %>%
ggplot() +
geom_point(aes(x=displ,y=hwy))
my_plot +
facet_grid(rows(vars(drv)))
my_plot +
facet_grid(rows = vars(drv))
my_plot +
facet_grid(cols = vars(cyl))
my_plot +
facet_grid(rows = vars(drv), cols = vars(cyl))
my_plot +
facet_grid(rows = vars(drv),
cols = vars(cyl))
my_plot +
facet_grid(rows = vars(drv),
cols = vars(cyl),
scales = "free")
my_plot +
facet_grid(rows = vars(drv),
cols = vars(cyl),
scales = "free", space = "free")
my_plot +
facet_wrap(vars(drv, cyl))
my_plot +
facet_wrap(vars(drv, cyl),
scales = "free")
#
air_1 <- airquality %>%
mutate(Wind_d = cut_number(Wind, n=4))
air_1 %>%
ggplot() +
geom_point(aes(x=Solar.R,y=Ozone)) +
facet_wrap(vars(Wind_d))
air_1 %>%
ggplot() +
geom_point(aes(x=Solar.R, y=Ozone,
color=Wind_d,
size=Wind_d))
mpg %>%
filter(class != "2seater") %>%
ggplot() +
geom_point(aes(x = displ,y = hwy)) +
facet_wrap(vars(class), ncol = 2)
mpg %>%
filter(class != "2seater") %>%
ggplot() +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(vars(class), ncol = 2, dir = "v")
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(color = drv) +
geom_smooth(se = FALSE)
library(tidyverse)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(color = drv) +
geom_smooth(se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE)
?after_stat
ggplot(mpg, aes(x = displ, y = hwy)) +  # 글로벌 매핑
geom_point() +
geom_smooth()
knitr::include_graphics(Figure/R_project.png)
knitr::include_graphics("Figure/R_project.png")
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
'차분, $x_{n+i}-x_{i}$', '최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
'차분, $$x_{n+i}-x_{i}$$', '최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
col1 <- c('mean(x)', 'median(x)', 'range(x)', 'IQR(x)', 'sum(x)',
'diff(x, n)', 'min(x)', 'max(x)')
col2 <- c('산술 평균값', '중앙값', '최솟값과 최댓값', '사분위범위', '합',
paste('차분', $x_{n+i}-x_{i}$), '최솟값' , '최댓값')
tab1 <- tibble::tibble(`함수` = col1, `설명` = col2)
knitr::kable(tab1, "pipe", caption = "통계 관련 함수")
ggplot(mpg) +
geom_bar(aes(x=trans,y=after_stat(prop)))
#### stat
library(tidyverse)
ggplot(mpg) +
geom_bar(aes(x=trans,y=after_stat(prop)))
ggplot(mpg) +
geom_bar( aes(x=trans,y=after_stat(prop), group=1))
# computed variable prop w/ and w/o group aes
p1 <- ggplot(mpg, aes(x=trans)) +
geom_bar()
p1_b <- ggplot_build(p1)
p1_b[[1]][[1]]
p1_b
p1_b[[1]]
p1_b[[1]][[1]]
#
mpg_am <- mpg %>%
mutate(am=substr(trans,1,nchar(trans)-4)) %>%
count(am)
mpg_am
ggplot(mpg_am) +
geom_bar(aes(x=am, y=n), stat="identity")
Cars93 %>%
filter(Cylinders %in% c(4,6)) %>%
ggplot() +
geom_point(aes(x = Weight, y = EngineSize)) +
facet_wrap(vars(Cylinders), ncol= 1)
data(Cars93, package = "MASS")
Cars93 %>%
filter(Cylinders %in% c(4,6)) %>%
ggplot() +
geom_point(aes(x = Weight, y = EngineSize)) +
facet_wrap(vars(Cylinders), ncol= 1)
Cars93 %>%
filter(Cylinders %in% c(4,6)) %>%
ggplot() +
geom_point(aes(x = Weight, y = EngineSize)) +
facet_wrap(vars(Cylinders), ncol= 1, scales = "free")
ggplot(mpg) +
geom_bar(aes(x = trans, y = after_stat(prop), group = 1))
ggplot(mpg) +
geom_bar(aes(x = trans, y = after_stat(prop), group = 1))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue", size = 2,
shape = 21, fill = "red", stroke = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue", size = 2,
shape = 21, fill = "red", stroke = 1)
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point(position = "jitter")
p1 <- ggplot(mpg, aes(x = class, y = hwy)) +
geom_boxplot()
p1
library(tidyverse)
p1 <- ggplot(mpg, aes(x = class, y = hwy)) +
geom_boxplot()
p1
p1 + coord_flip()
p2 <- ggplot(mpg, aes(x = hwy, y = class)) +
geom_boxplot()
p2
p2 + coord_flip()
ggplot(mpg, aes(x = "", y = hwy)) +
geom_boxplot() +
xlab(NULL)
ggplot(mpg, aes(x = hwy, y = "")) +
geom_boxplot() +
xlab(NULL)
b1 <- ggplot(mpg, aes(x = class, fill = class)) +
geom_bar(show.legend = FALSE, width = 1) +
labs(x = NULL, y = NULL)
b1
gplot(mpg, aes(x = class, fill = class)) +
geom_bar(show.legend = FALSE, width = 1) +
labs(x = NULL, y = NULL)
ggplot(mpg, aes(x = class, fill = class)) +
geom_bar(show.legend = FALSE) +
labs(x = NULL, y = NULL)
b1 + coord_flip()
b1 + coord_polar()
b2 <-  ggplot(mpg, aes(x = "", fill = class)) +
geom_bar(width = 1) +
labs(x = NULL, y = NULL)
b2
b2 + coord_polar(theta = "y")
b2 + coord_polar()
knitr::include_graphics("Figure/ggplot_ex_1_1.png")
knitr::include_graphics("Figure/ch2_ex_21_1.png")
?version
sessionInfo()
tidyverse::tidyverse_sitrep()
tidyverse::tidyverse_update()
install.packages(c("brew", "broom", "C50", "cli", "conquer", "countrycode", "crayon", "Cubist", "datawizard", "dials", "doParallel", "dplyr", "effectsize", "foreach", "gdtools", "generics", "gower", "hardhat", "iterators", "keras", "lme4", "magrittr", "nloptr", "pillar", "quantreg", "questionr", "randomForest", "RcppArmadillo", "readr", "renv", "reticulate", "rlang", "see", "seriation", "sf", "showtext", "svglite", "systemfonts", "tensorflow", "terra", "tidyr", "units", "V8", "VGAM", "x13binary", "yaml"))
install.packages(c("brew", "broom", "C50", "cli", "conquer", "countrycode", "crayon", "Cubist", "datawizard", "dials", "doParallel", "dplyr", "effectsize", "foreach", "gdtools", "generics", "gower", "hardhat", "iterators", "keras", "lme4", "magrittr", "nloptr", "pillar", "quantreg", "questionr", "randomForest", "RcppArmadillo", "readr", "renv", "reticulate", "rlang", "see", "seriation", "sf", "showtext", "svglite", "systemfonts", "tensorflow", "terra", "tidyr", "units", "V8", "VGAM", "x13binary", "yaml"))
install.packages(c("brew", "broom", "C50", "cli", "conquer", "countrycode", "crayon", "Cubist", "datawizard", "dials", "doParallel", "dplyr", "effectsize", "foreach", "gdtools", "generics", "gower", "hardhat", "iterators", "keras", "lme4", "magrittr", "nloptr", "pillar", "quantreg", "questionr", "randomForest", "RcppArmadillo", "readr", "renv", "reticulate", "rlang", "see", "seriation", "sf", "showtext", "svglite", "systemfonts", "tensorflow", "terra", "tidyr", "units", "V8", "VGAM", "x13binary", "yaml"))
install.packages(c("brew", "broom", "C50", "cli", "conquer", "countrycode", "crayon", "Cubist", "datawizard", "dials", "doParallel", "dplyr", "effectsize", "foreach", "gdtools", "generics", "gower", "hardhat", "iterators", "keras", "lme4", "magrittr", "nloptr", "pillar", "quantreg", "questionr", "randomForest", "RcppArmadillo", "readr", "renv", "reticulate", "rlang", "see", "seriation", "sf", "showtext", "svglite", "systemfonts", "tensorflow", "terra", "tidyr", "units", "V8", "VGAM", "x13binary", "yaml"))
install.packages(c("broom", "dplyr", "magrittr", "pillar", "readr", "rlang", "tidyr"
))
install.packages(c("broom", "dplyr", "magrittr", "pillar", "readr", "rlang", "tidyr"))
install.packages(c("broom", "dplyr", "magrittr", "pillar", "readr", "rlang", "tidyr"))
install.packages(c("broom", "dplyr", "magrittr", "pillar", "readr", "rlang", "tidyr"))
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
tidyverse_sitrep()
library(tidyverse)
tidyverse_sitrep()
library(tidyverse)
tidyverse_sitrep()
?tidyverse_sitrep
?tidyverse_deps
getOptions("repos")
tidyverse_deps
?utils::available.packages
tidyverse_sitrep
rstudioapi::getVersion()
tidyverse_deps
tidyverse_deps()
tidyverse::tidyverse_sitrep()
function ()
{
cli::cat_rule("R & RStudio")
if (rstudioapi::isAvailable()) {
cli::cat_bullet("RStudio: ", rstudioapi::getVersion())
}
cli::cat_bullet("R: ", getRversion())
deps <- tidyverse_deps(repos = "https://cloud.r-project.org/")
package_pad <- format(deps$package)
packages <- ifelse(deps$behind, paste0(cli::col_yellow(cli::style_bold(package_pad)),
" (", deps$local, " < ", deps$cran, ")"),
paste0(package_pad, " (", deps$cran, ")"))
cli::cat_rule("Core packages")
cli::cat_bullet(packages[deps$package %in% core])
cli::cat_rule("Non-core packages")
cli::cat_bullet(packages[!deps$package %in% core])
}
function ()
{
cli::cat_rule("R & RStudio")
if (rstudioapi::isAvailable()) {
cli::cat_bullet("RStudio: ", rstudioapi::getVersion())
}
cli::cat_bullet("R: ", getRversion())
deps <- tidyverse_deps(repos = "https://cloud.r-project.org/")
package_pad <- format(deps$package)
packages <- ifelse(deps$behind, paste0(cli::col_yellow(cli::style_bold(package_pad)),
" (", deps$local, " < ", deps$cran, ")"),
paste0(package_pad, " (", deps$cran, ")"))
cli::cat_rule("Core packages")
cli::cat_bullet(packages[deps$package %in% core])
cli::cat_rule("Non-core packages")
cli::cat_bullet(packages[!deps$package %in% core])
}
my_tidy <- function () {
cli::cat_rule("R & RStudio")
if (rstudioapi::isAvailable()) {
cli::cat_bullet("RStudio: ", rstudioapi::getVersion())
}
cli::cat_bullet("R: ", getRversion())
deps <- tidyverse_deps(repos = "https://cloud.r-project.org/")
package_pad <- format(deps$package)
packages <- ifelse(deps$behind, paste0(cli::col_yellow(cli::style_bold(package_pad)),
" (", deps$local, " < ", deps$cran, ")"),
paste0(package_pad, " (", deps$cran, ")"))
cli::cat_rule("Core packages")
cli::cat_bullet(packages[deps$package %in% core])
cli::cat_rule("Non-core packages")
cli::cat_bullet(packages[!deps$package %in% core])
}
my_tidy
my_tidy <- function () {
cli::cat_rule("R & RStudio")
if (rstudioapi::isAvailable()) {
cli::cat_bullet("RStudio: ", rstudioapi::getVersion())
}
cli::cat_bullet("R: ", getRversion())
deps <- tidyverse_deps(repos = "https://cloud.r-project.org/")
package_pad <- format(deps$package)
packages <- ifelse(deps$behind, paste0(cli::col_yellow(cli::style_bold(package_pad)),
" (", deps$local, " < ", deps$cran, ")"),
paste0(package_pad, " (", deps$cran, ")"))
cli::cat_rule("Core packages")
cli::cat_bullet(packages[deps$package %in% core])
cli::cat_rule("Non-core packages")
cli::cat_bullet(packages[!deps$package %in% core])
}
my_tidy()
tidyverse_deps(repos = "https://cloud.r-project.org/")
getRversion()
?getRversion
repos = "https://cloud.r-project.org/"
tidyverse::tidyverse_sitrep()
rstudioapi::getVersion()
tidyverse::tidyverse_sitrep
my_tidy <- function(){
cli::cat_rule("R & RStudio")
if (rstudioapi::isAvailable()) {
cli::cat_bullet("RStudio: ", rstudioapi::getVersion())
}
cli::cat_bullet("R: ", getRversion())
deps <- tidyverse_deps(repos = "https://cloud.r-project.org/")
package_pad <- format(deps$package)
packages <- ifelse(deps$behind, paste0(cli::col_yellow(cli::style_bold(package_pad)),
" (", deps$local, " < ", deps$cran, ")"),
paste0(package_pad, " (", deps$cran, ")"))
cli::cat_rule("Core packages")
cli::cat_bullet(packages[deps$package %in% core])
cli::cat_rule("Non-core packages")
cli::cat_bullet(packages[!deps$package %in% core])
}
my_tidy()
library(tidyverse)
my_tidy <- function(){
cli::cat_rule("R & RStudio")
if (rstudioapi::isAvailable()) {
cli::cat_bullet("RStudio: ", rstudioapi::getVersion())
}
cli::cat_bullet("R: ", getRversion())
deps <- tidyverse_deps(repos = "https://cloud.r-project.org/")
package_pad <- format(deps$package)
packages <- ifelse(deps$behind, paste0(cli::col_yellow(cli::style_bold(package_pad)),
" (", deps$local, " < ", deps$cran, ")"),
paste0(package_pad, " (", deps$cran, ")"))
cli::cat_rule("Core packages")
cli::cat_bullet(packages[deps$package %in% core])
cli::cat_rule("Non-core packages")
cli::cat_bullet(packages[!deps$package %in% core])
}
my_tidy()
tidyverse_deps()
tidyverse_deps() %>% print(n=26)
library(tidyverse)
my_tidy <- function(){
core <- c("dplyr", "ggplot2", "forcats", "readr", "tibble", "purrr", "stringr", "tidyr")
cli::cat_rule("R & RStudio")
if (rstudioapi::isAvailable()) {
cli::cat_bullet("RStudio: ", rstudioapi::getVersion())
}
cli::cat_bullet("R: ", getRversion())
deps <- tidyverse_deps(repos = "https://cloud.r-project.org/")
package_pad <- format(deps$package)
packages <- ifelse(deps$behind, paste0(cli::col_yellow(cli::style_bold(package_pad)),
" (", deps$local, " < ", deps$cran, ")"),
paste0(package_pad, " (", deps$cran, ")"))
cli::cat_rule("Core packages")
cli::cat_bullet(packages[deps$package %in% core])
cli::cat_rule("Non-core packages")
cli::cat_bullet(packages[!deps$package %in% core])
}
my_tidy()
tidyverse_sitrep()
tidyverse_sitrep()
rstudioapi::getVersion()
?rstudioapi::getVersion
